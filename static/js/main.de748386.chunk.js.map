{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","containers/Auth/Auth.js","form/formFramework.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","open","onClick","onToggle","className","join","Backdrop","links","to","label","exact","Drawer","clickHandler","onClose","map","link","index","key","activeClassName","active","this","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","AnswerItem","push","onAnswerClick","answer","id","text","AnswersList","console","log","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCounter","Object","keys","results","reduce","total","quiz","quizItem","success","error","length","onRetry","Quiz","isFinished","activeQuestion","answerState","rightAnswerId","onAnswerClickHandler","answerId","timeout","window","setTimeout","isQuizFinished","clearTimeout","retryHandler","match","params","QuizWrapper","QuizList","renderQuizes","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","forEach","name","isValid","trim","is","AuthForm","onSubmit","renderInputs","createControl","config","validate","validateForm","hasOwnProperty","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","concat","questionItem","createQuizHandler","changeHandler","selectChangeHandler","App","path","component","Boolean","location","hostname","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"kHACAA,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,OAAS,yB,gBCAzFD,EAAOC,QAAU,CAAC,aAAe,mCAAmC,QAAU,8BAA8B,MAAQ,8B,iBCApHD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,KAAO,2B,kBCArED,EAAOC,QAAU,CAAC,KAAO,mBAAmB,YAAc,4B,gBCA1DD,EAAOC,QAAU,CAAC,WAAa,+BAA+B,SAAW,+B,gBCAzED,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,4BAA4B,MAAQ,4B,gBCA5GD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,QAAU,wBAAwB,MAAQ,sBAAsB,QAAU,0B,gBCA5HD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,SAAW,yB,gBCAvDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,QAAU,yB,oBCAzDD,EAAOC,QAAU,CAAC,OAAS,yB,gBCA3BD,EAAOC,QAAU,CAAC,SAAW,6B,kBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,SAAW,6B,iBCA7BD,EAAOC,QAAU,CAAC,YAAc,mC,gBCAhCD,EAAOC,QAAU,CAAC,OAAS,yB,0MCaZC,EAVI,SAAAC,GACf,IAAMC,EAAM,CACRC,IAAQH,WACR,KACAC,EAAMG,OAAS,YAAcD,IAAQE,KAAO,WAGhD,OAAQ,uBAAGC,QAASL,EAAMM,SAAUC,UAAWN,EAAIO,KAAK,Q,kCCN7CC,EAFE,SAAAT,GAAK,OAAI,yBAAKO,UAAWL,IAAQO,SAAUJ,QAASL,EAAMK,W,OCErEK,EAAQ,CACV,CAACC,GAAI,IAAKC,MAAO,uCAAUC,OAAO,GAClC,CAACF,GAAI,QAASC,MAAO,qEAAeC,OAAO,GAC3C,CAACF,GAAI,gBAAiBC,MAAO,sEAAgBC,OAAO,IAiCzCC,E,4MA5BXC,aAAe,WAAO,EAAKf,MAAMgB,W,4DAElB,IAAD,OACV,OAAON,EAAMO,KAAI,SAACC,EAAMC,GACpB,OACI,wBAAIC,IAAKD,GACL,kBAAC,IAAD,CAASR,GAAIO,EAAKP,GAAIE,MAAOK,EAAKL,MAAOQ,gBAAiBnB,IAAQoB,OAAQjB,QAAS,EAAKU,cAAeG,EAAKN,a,+BAOxH,IAAMX,EAAM,CAACC,IAAQY,OAChBS,KAAKvB,MAAMG,OAAyB,KAAhBD,IAAQsB,OACjC,OACI,kBAAC,IAAMC,SAAP,KACI,yBAAKlB,UAAWN,EAAIO,KAAK,MACrB,4BACKe,KAAKG,gBAGbH,KAAKvB,MAAMG,OAAS,kBAAC,EAAD,CAAUE,QAASkB,KAAKvB,MAAMgB,UAAa,U,GAvB3DW,aC0BNC,E,4MA/BXC,MAAQ,CACJC,MAAM,G,EAGVC,kBAAoB,WAChB,EAAKC,SAAS,CAACF,MAAO,EAAKD,MAAMC,Q,EAGrCG,iBAAmB,WACf,EAAKD,SAAS,CAACF,MAAM,K,uDAIrB,OACI,yBAAKvB,UAAWL,IAAQ0B,QACpB,kBAAC,EAAD,CACIzB,OAAQoB,KAAKM,MAAMC,KACnBd,QAASO,KAAKU,mBAElB,kBAAC,EAAD,CACI9B,OAAQoB,KAAKM,MAAMC,KACnBxB,SAAUiB,KAAKQ,oBAEnB,8BACKR,KAAKvB,MAAMkC,e,GA1BXP,a,4ECWNQ,EAbI,SAAAnC,GACf,IAAMC,EAAM,CAACC,IAAQiC,YAKrB,OAJInC,EAAM6B,OACN5B,EAAImC,KAAKlC,IAAQF,EAAM6B,QAGnB,wBAAItB,UAAWN,EAAIO,KAAK,KACpBH,QAAS,kBAAML,EAAMqC,cAAcrC,EAAMsC,OAAOC,MACvDvC,EAAMsC,OAAOE,OCUPC,EAjBK,SAAAzC,GAEhB,OADA0C,QAAQC,IAAI3C,GAER,wBAAIO,UAAWL,IAAQuC,aAClBzC,EAAM4C,QAAQ3B,KAAI,SAACqB,EAAQnB,GACxB,OAAQ,kBAAC,EAAD,CACJkB,cAAerC,EAAMqC,cACrBjB,IAAKD,EACLmB,OAAQA,EACRT,MAAO7B,EAAM6B,MAAQ7B,EAAM6B,MAAMS,EAAOC,IAAM,YCWnDM,EApBI,SAAA7C,GAEf,OACI,yBAAKO,UAAWL,IAAQ2C,YACpB,uBAAGtC,UAAWL,IAAQ4C,UACtB,8BACI,gCAAS9C,EAAM+C,aAAf,KADJ,OAEK/C,EAAMgD,UAEP,+BAAQhD,EAAM+C,aAAd,iBAAgC/C,EAAMiD,aAE1C,kBAAC,EAAD,CACIL,QAAS5C,EAAM4C,QACfP,cAAerC,EAAMqC,cACrBR,MAAO7B,EAAM6B,U,kCCAdqB,EAfA,SAAAlD,GACX,IAAMC,EAAM,CACRC,IAAQgD,OACRhD,IAAQF,EAAMmD,OAGlB,OACI,4BAAQ9C,QAASL,EAAMK,QACfE,UAAWN,EAAIO,KAAK,KACpB4C,SAAUpD,EAAMoD,UACnBpD,EAAMkC,WCwBJmB,EAhCM,SAAArD,GACjB,IAAMsD,EAAiBC,OAAOC,KAAKxD,EAAMyD,SAASC,QAAO,SAACC,EAAOvC,GAI7D,MAH2B,YAAvBpB,EAAMyD,QAAQrC,IACduC,IAEGA,IACR,GAEH,OAAQ,yBAAKpD,UAAWL,IAAQmD,cAC5B,4BACKrD,EAAM4D,KAAK3C,KAAI,SAAC4C,EAAU1C,GACvB,IAAMlB,EAAM,CACR,KAC+B,YAA/BD,EAAMyD,QAAQI,EAAStB,IAAoB,YAAcrC,IAAQ4D,QAAU,YAAc5D,IAAQ6D,OAErG,OACI,wBAAI3C,IAAKD,GACL,gCAASA,EAAQ,GADrB,QAEK0C,EAASb,SACV,uBAAGzC,UAAWN,EAAIO,KAAK,YAKvC,sFAAe8C,EAAf,iBAAmCtD,EAAM4D,KAAKI,QAC9C,6BACI,kBAAC,EAAD,CAAQ3D,QAASL,EAAMiE,QAASd,KAAK,WAArC,0DACA,kBAAC,IAAD,CAAMxC,GAAI,KAAK,kBAAC,EAAD,CAAQwC,KAAK,WAAb,mICuFZe,E,4MA9GXrC,MAAQ,CACJ4B,QAAS,GACTU,YAAY,EACZC,eAAgB,EAChBC,YAAa,KACbT,KAAM,CAAC,CACHrB,GAAI,EACJS,SAAU,6DACVsB,cAAe,EACf1B,QAAS,CACL,CAACJ,KAAM,yCAAYD,GAAI,GACvB,CAACC,KAAM,uCAAUD,GAAI,GACrB,CAACC,KAAM,oDAAaD,GAAI,GACxB,CAACC,KAAM,+CAAaD,GAAI,KAE7B,CACCA,GAAI,EACJS,SAAU,mEACVsB,cAAe,EACf1B,QAAS,CACL,CAACJ,KAAM,sBAAQD,GAAI,GACnB,CAACC,KAAM,oDAAaD,GAAI,GACxB,CAACC,KAAM,kCAAUD,GAAI,GACrB,CAACC,KAAM,kCAAUD,GAAI,O,EAcjCgC,qBAAuB,SAACC,GAEpB,GADA9B,QAAQC,IAAI6B,GACR,EAAK3C,MAAMwC,YAAa,CACxB,IAAMjD,EAAMmC,OAAOC,KAAK,EAAK3B,MAAMwC,aAAa,GAChD,GA5CW,YA4CP,EAAKxC,MAAMwC,YAAYjD,GACvB,OAGR,IAAM4B,EAAW,EAAKnB,MAAM+B,KAAK,EAAK/B,MAAMuC,gBACtCX,EAAU,EAAK5B,MAAM4B,QAC3B,GAAIT,EAASsB,gBAAkBE,EAAU,CAChCf,EAAQT,EAAST,MAClBkB,EAAQT,EAAST,IApDV,WAsDX,EAAKP,SAAS,CACVqC,YAAY,eAAGG,EAvDR,WAwDPf,QAASA,IAEb,IAAMgB,EAAUC,OAAOC,YAAW,WACzB,EAAKC,iBAMN,EAAK5C,SAAS,CAACmC,YAAY,IAL3B,EAAKnC,SAAS,CACVoC,eAAgB,EAAKvC,MAAMuC,eAAiB,EAC5CC,YAAa,OAKrBK,OAAOG,aAAaJ,KACrB,UAGHhB,EAAQT,EAAST,IAxER,QAyET,EAAKP,SAAS,CACVqC,YAAY,eAAGG,EA1EV,SA2ELf,QAASA,K,EAKrBqB,aAAe,WACX,EAAK9C,SAAS,CACVyB,QAAS,GACTU,YAAY,EACZC,eAAgB,EAChBC,YAAa,Q,+DAnDjB,QAAS9C,KAAKM,MAAMuC,eAAiB,EAAI7C,KAAKM,MAAM+B,KAAKI,U,0CAIzDtB,QAAQC,IAAI,YAAcpB,KAAKvB,MAAM+E,MAAMC,OAAOzC,M,+BAoDlD,OACI,yBAAKhC,UAAWL,IAAQgE,MACpB,yBAAK3D,UAAWL,IAAQ+E,aACpB,2JAEI1D,KAAKM,MAAMsC,WACP,kBAAC,EAAD,CAAcV,QAASlC,KAAKM,MAAM4B,QACpBG,KAAMrC,KAAKM,MAAM+B,KACjBK,QAAS1C,KAAKuD,eAG5B,kBAAC,EAAD,CAAY9B,SAAUzB,KAAKM,MAAM+B,KAAKrC,KAAKM,MAAMuC,gBAAgBpB,SACrDJ,QAASrB,KAAKM,MAAM+B,KAAKrC,KAAKM,MAAMuC,gBAAgBxB,QACpDP,cAAed,KAAKgD,qBACpBtB,WAAY1B,KAAKM,MAAM+B,KAAKI,OAC5BjB,aAAcxB,KAAKM,MAAMuC,eAAiB,EAC1CvC,MAAON,KAAKM,MAAMwC,oB,GAvGvC1C,a,iBCmBJuD,E,6KArBP,MAAO,CAAC,EAAG,EAAG,GAAGjE,KAAI,SAAC2C,EAAMzC,GACxB,OAAQ,4BACJ,kBAAC,IAAD,CAASR,GAAI,SAAUiD,GAAvB,4BAAmCA,S,+BAM3C,OACI,yBAAKrD,UAAWL,IAAQgF,UACpB,6BACI,yGACA,4BACK3D,KAAK4D,sB,GAfPxD,a,0CCDvB,SAASyD,EAAT,GAAsD,IAAlCC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,eAChC,OAAQF,GAASE,GAAkBD,EAGvC,IAmBeE,EAnBD,SAAAxF,GACV,IAAMyF,EAAYzF,EAAMmD,MAAQ,OAC1BlD,EAAM,CAACC,IAAQsF,OACfE,EAAO,UAAMD,EAAN,YAAmBE,KAAKC,UAMrC,OAJIR,EAAUpF,IACVC,EAAImC,KAAKlC,IAAQ2F,SAIjB,yBAAKtF,UAAWN,EAAIO,KAAK,MACrB,2BAAOkF,QAASA,GAAU1F,EAAMY,OAChC,2BAAO2B,GAAImD,EAASvC,KAAMsC,EAAWK,MAAO9F,EAAM8F,MAAOC,SAAU/F,EAAM+F,WACxEX,EAAUpF,GAAS,8BAAOA,EAAMgG,cAAgB,uHAAiC,O,oBCiG/EC,G,4MA5GXpE,MAAQ,CACJqE,aAAa,EACbC,aAAc,CACVC,MAAO,CACHN,MAAO,GACP3C,KAAM,QACNvC,MAAO,QACPoF,aAAc,gHACdX,OAAO,EACPC,SAAS,EACTe,WAAY,CACRC,UAAU,EACVF,OAAO,IAGfG,SAAU,CACNT,MAAO,GACP3C,KAAM,WACNvC,MAAO,uCACPoF,aAAc,+IACdX,OAAO,EACPC,SAAS,EACTe,WAAY,CACRC,UAAU,EACVE,UAAW,M,EAM3BC,aAAe,a,EAIfC,gBAAkB,a,EAIlBC,cAAgB,WAEZC,MAAMC,kB,EAoBVC,gBAAkB,SAACF,EAAOG,GACtB,IAAMZ,EAAY,eAAO,EAAKtE,MAAMsE,cAC9Ba,EAAO,eAAOb,EAAaY,IACjCC,EAAQlB,MAAQc,EAAMK,OAAOnB,MAC7BkB,EAAQ1B,SAAU,EAClB0B,EAAQ3B,MAAQ,EAAK6B,gBAAgBF,EAAQlB,MAAOkB,EAAQX,YAC5DF,EAAaY,GAAeC,EAC5B,IAAId,GAAc,EAClB3C,OAAOC,KAAK2C,GAAcgB,SAAQ,SAAAC,GAC9BlB,EAAcA,GAAeC,EAAaiB,GAAM/B,SAEpD,EAAKrD,SAAS,CAACmE,aAAcA,EAAcD,YAAaA,K,8DA5B5CJ,EAAOO,GACnB,IAAKA,EACD,OAAO,EAEX,IAAIgB,GAAU,EAUd,OATIhB,EAAWC,WACXe,EAA2B,KAAjBvB,EAAMwB,QAAiBD,GAEjChB,EAAWD,QACXiB,EAAUE,KAAGnB,MAAMN,IAAUuB,GAE7BhB,EAAWG,YACXa,EAAUvB,EAAM9B,QAAUqC,EAAWG,WAAaa,GAE/CA,I,qCAiBK,IAAD,OACX,OAAO9D,OAAOC,KAAKjC,KAAKM,MAAMsE,cAAclF,KAAI,SAAC8F,EAAa5F,GAC1D,IAAM6F,EAAU,EAAKnF,MAAMsE,aAAaY,GACxC,OAAQ,kBAAC,EAAD,CACJ3F,IAAK2F,EAAc5F,EACnBgC,KAAM6D,EAAQ7D,KACd2C,MAAOkB,EAAQlB,MACfT,MAAO2B,EAAQ3B,MACfC,QAAS0B,EAAQ1B,QACjB1E,MAAOoG,EAAQpG,MACfoF,aAAcgB,EAAQhB,aACtBT,iBAAkByB,EAAQX,WAC1BN,SAAU,SAAAa,GAAK,OAAI,EAAKE,gBAAgBF,EAAOG,W,+BAMvD,OACI,yBAAKxG,UAAWL,IAAQ+F,MACpB,6BACI,kGACA,0BAAM1F,UAAWL,IAAQsH,SAAUC,SAAUlG,KAAKoF,eAC7CpF,KAAKmG,eAEN,kBAAC,EAAD,CAAQvE,KAAK,UAAU9C,QAASkB,KAAKkF,aAAcrD,UAAW7B,KAAKM,MAAMqE,aAAzE,kCACA,kBAAC,EAAD,CAAQ/C,KAAK,UAAU9C,QAASkB,KAAKmF,gBAAiBtD,UAAW7B,KAAKM,MAAMqE,aAA5E,6E,GAtGLvE,a,oBCPZ,SAASgG,GAAcC,EAAQvB,GAClC,OAAO,2BACAuB,GADP,IAEIvB,aACAhB,OAAQgB,EACRf,SAAS,EACTQ,MAAO,KAKR,SAAS+B,GAAS/B,GAA2B,IAApBO,EAAmB,uDAAN,KACzC,IAAKA,EACD,OAAO,EAEX,IAAIgB,GAAU,EAId,OAHIhB,EAAWC,WACXe,EAAUvB,EAAMwB,QAAUD,GAEvBA,EAIJ,SAASS,GAAa3B,GACzB,IAAID,GAAc,EAClB,IAAK,IAAIc,KAAWb,EACZA,EAAa4B,eAAef,KAC5Bd,EAAcA,GAAeC,EAAaa,GAAS3B,OAASa,GAGpE,OAAOA,E,wBCbI8B,GAdA,SAAAhI,GACX,IAAM0F,EAAO,UAAM1F,EAAMY,MAAZ,aAAsB+E,KAAKC,UACxC,OAAQ,yBAAKrF,UAAWL,KAAQ8H,QAC5B,2BAAOtC,QAASA,GAAU1F,EAAMY,OAChC,4BAAQ2B,GAAImD,EACJI,MAAO9F,EAAM8F,MACbC,SAAU/F,EAAM+F,UACnB/F,EAAMiI,QAAQhH,KAAI,SAACiH,EAAQ/G,GACxB,OAAQ,4BAAQ2E,MAAOoC,EAAOpC,MAAO1E,IAAG,UAAK8G,EAAOpC,MAAZ,aAAsB3E,IAAU+G,EAAO1F,YCH/F,SAAS2F,GAAoBC,GACzB,OAAOT,GAAc,CAAC/G,MAAM,8CAAD,OAAawH,GAAUpC,aAAc,8JAAkC,CAACM,UAAU,IAGjH,SAAS+B,KACL,MAAO,CACHrF,SAAU2E,GAAc,CAAC/G,MAAO,kFAAkBoF,aAAc,kJAAgC,CAACM,UAAU,IAC3GgC,QAASH,GAAoB,GAC7BI,QAASJ,GAAoB,GAC7BK,QAASL,GAAoB,GAC7BM,QAASN,GAAoB,I,IA+GtBO,G,4MAzGX7G,MAAQ,CACJ+B,KAAM,GACNsC,aAAa,EACb5B,cAAe,EACf6B,aAAckC,M,EAGlB1B,cAAgB,SAAAC,GACZA,EAAMC,kB,EAGV8B,mBAAqB,SAAC/B,GAClBA,EAAMC,iBACN,IAAMjD,EAAO,EAAK/B,MAAM+B,KAAKgF,SACvBzH,EAAQyC,EAAKI,OAAS,EACtB6E,EAAe,CACjB7F,SAAU,EAAKnB,MAAMsE,aAAanD,SAAS8C,MAC3CvD,GAAIpB,EACJmD,cAAe,EAAKzC,MAAMyC,cAC1B1B,QAAS,CACL,CAACJ,KAAM,EAAKX,MAAMsE,aAAamC,QAAQxC,MAAOvD,GAAI,EAAKV,MAAMsE,aAAamC,QAAQ/F,IAClF,CAACC,KAAM,EAAKX,MAAMsE,aAAaoC,QAAQzC,MAAOvD,GAAI,EAAKV,MAAMsE,aAAaoC,QAAQhG,IAClF,CAACC,KAAM,EAAKX,MAAMsE,aAAaqC,QAAQ1C,MAAOvD,GAAI,EAAKV,MAAMsE,aAAaqC,QAAQjG,IAClF,CAACC,KAAM,EAAKX,MAAMsE,aAAasC,QAAQ3C,MAAOvD,GAAI,EAAKV,MAAMsE,aAAasC,QAAQlG,MAG1FqB,EAAKxB,KAAKyG,GACV,EAAK7G,SAAS,CACN4B,OACAsC,aAAa,EACb5B,cAAe,EACf6B,aAAckC,Q,EAK1BS,kBAAoB,SAAClC,GACjBA,EAAMC,iBACNnE,QAAQC,IAAI,EAAKd,MAAM+B,O,EAG3BmF,cAAgB,SAACjD,EAAOiB,GACpB,IAAMZ,EAAY,eAAO,EAAKtE,MAAMsE,cAC9Ba,EAAO,eAAOb,EAAaY,IACjCC,EAAQ1B,SAAU,EAClB0B,EAAQlB,MAAQA,EAChBkB,EAAQ3B,MAAQwC,GAASb,EAAQlB,MAAOkB,EAAQX,YAChDF,EAAaY,GAAeC,EAC5B,EAAKhF,SAAS,CAACmE,eAAcD,YAAa4B,GAAa3B,M,EAI3D6C,oBAAsB,SAAApC,GAClBlE,QAAQC,IAAIiE,EAAMK,OAAOnB,OACzB,EAAK9D,SAAS,CAACsC,eAAgBsC,EAAMK,OAAOnB,S,6DAGhC,IAAD,OACX,OAAOvC,OAAOC,KAAKjC,KAAKM,MAAMsE,cAAclF,KAAI,SAAC8F,EAAa5F,GAC1D,IAAM6F,EAAU,EAAKnF,MAAMsE,aAAaY,GACxC,OACI,kBAAC,IAAMtF,SAAP,CAAgBL,IAAG,UAAK2F,EAAL,aAAqB5F,IACpC,kBAAC,EAAD,CACIC,IAAG,UAAK2F,EAAL,aAAqB5F,GACxBP,MAAOoG,EAAQpG,MACfkF,MAAOkB,EAAQlB,MACfT,MAAO2B,EAAQ3B,MACfE,iBAAkByB,EAAQX,WAC1Bf,QAAS0B,EAAQ1B,QACjBU,aAAcgB,EAAQhB,aACtBD,SAAU,SAAAa,GAAK,OAAI,EAAKmC,cAAcnC,EAAMK,OAAOnB,MAAOiB,MACnD,IAAV5F,EAAc,6BAAQ,W,+BAOnC,OACI,yBAAKZ,UAAWL,KAAQwI,aACpB,6BACI,+GACA,0BAAMjB,SAAUlG,KAAKoF,eAChBpF,KAAKmG,eACN,kBAAC,GAAD,CACI9G,MAAM,+IACNkF,MAAOvE,KAAKM,MAAMyC,cAClByB,SAAUxE,KAAKyH,oBACff,QAAS,CACL,CAACzF,KAAM,EAAGsD,MAAO,GACjB,CAACtD,KAAM,EAAGsD,MAAO,GACjB,CAACtD,KAAM,EAAGsD,MAAO,GACjB,CAACtD,KAAM,EAAGsD,MAAO,MAGzB,kBAAC,EAAD,CAAQ3C,KAAK,UAAU9C,QAASkB,KAAKoH,mBAAoBvF,UAAW7B,KAAKM,MAAMqE,aAA/E,yFACA,kBAAC,EAAD,CAAQ/C,KAAK,UAAU9C,QAASkB,KAAKuH,kBAAmB1F,SAAsC,KAA3B7B,KAAKM,MAAM+B,KAAKI,QAAnF,8E,GAlGErC,a,SCAXsH,OAdf,WACI,OACI,kBAAC,EAAD,KACI,kBAAC,KAAD,KACI,kBAAC,KAAD,CAAOC,KAAK,QAAQC,UAAWlD,KAC/B,kBAAC,KAAD,CAAOiD,KAAK,gBAAgBC,UAAWT,KACvC,kBAAC,KAAD,CAAOQ,KAAK,YAAYC,UAAWjF,IACnC,kBAAC,KAAD,CAAOgF,KAAK,IAAIC,UAAWjE,OCHvBkE,QACW,cAA7B1E,OAAO2E,SAASC,UAEe,UAA7B5E,OAAO2E,SAASC,UAEhB5E,OAAO2E,SAASC,SAASvE,MACvB,2DCXN,IAAMwE,GACF,kBAAC,IAAMC,WAAP,KACI,kBAAC,IAAD,KAAe,kBAAC,GAAD,QAIvBC,IAASC,OAAOH,GACZI,SAASC,eAAe,SDqHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAApG,GACLrB,QAAQqB,MAAMA,EAAMqG,c","file":"static/js/main.de748386.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3i-XY\",\"close\":\"Drawer_close__s4EKF\",\"active\":\"Drawer_active__2KEkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__27Mo1\",\"success\":\"FinishedQuiz_success__1JIed\",\"error\":\"FinishedQuiz_error__1NK2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1L-Zp\",\"open\":\"MenuToggle_open__2OCEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2wya1\",\"QuizWrapper\":\"Quiz_QuizWrapper__191J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3VjB-\",\"Question\":\"ActiveQuiz_Question__pSzK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__BfScg\",\"success\":\"AnswerItem_success__33WEN\",\"error\":\"AnswerItem_error__wq5cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1hbkP\",\"success\":\"Button_success__vUGQE\",\"error\":\"Button_error__15lok\",\"primary\":\"Button_primary__31y4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__38lIP\",\"AuthForm\":\"Auth_AuthForm__2w9p_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2GEbV\",\"invalid\":\"Input_invalid__1tSLi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__38ghg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3wxm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2CRBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__1ru--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__24ZAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__11aP5\"};","import React from \"react\";\r\nimport classes from './MenuToggle.module.css'\r\n\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa',\r\n        props.isOpen ? 'fa-times ' + classes.open : 'fa-bars'\r\n    ];\r\n\r\n    return (<i onClick={props.onToggle} className={cls.join(' ')}/>)\r\n};\r\n\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}/>;\r\n\r\nexport default Backdrop","import React, {Component} from \"react\";\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst links = [\r\n    {to: '/', label: 'Список', exact: true},\r\n    {to: '/auth', label: 'Авторизация', exact: false},\r\n    {to: '/quiz-creator', label: 'Создать тест', exact: false},\r\n\r\n];\r\n\r\nclass Drawer extends Component {\r\n    clickHandler = () => {this.props.onClose()}\r\n\r\n    renderLinks() {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink to={link.to} exact={link.exact} activeClassName={classes.active} onClick={this.clickHandler}>{link.label}</NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const cls = [classes.Drawer,\r\n            !this.props.isOpen ? classes.close : null];\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks()}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from \"react\";\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    };\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({menu: !this.state.menu})\r\n    };\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({menu: false})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                />\r\n                <MenuToggle\r\n                    isOpen={this.state.menu}\r\n                    onToggle={this.toggleMenuHandler}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React from \"react\";\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem];\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (<li className={cls.join(' ')}\r\n                onClick={() => props.onAnswerClick(props.answer.id)}>\r\n        {props.answer.text}\r\n    </li>)\r\n};\r\n\r\n\r\nexport default AnswerItem","import React from \"react\";\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => {\r\n    console.log(props);\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            {props.answers.map((answer, index) => {\r\n                return (<AnswerItem\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    key={index}\r\n                    answer={answer}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />)\r\n            })}\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nexport default AnswersList","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}\r\n                state={props.state}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActiveQuiz","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ];\r\n\r\n    return (\r\n        <button onClick={props.onClick}\r\n                className={cls.join(' ')}\r\n                disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCounter = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0);\r\n\r\n    return (<div className={classes.FinishedQuiz}>\r\n        <ul>\r\n            {props.quiz.map((quizItem, index) => {\r\n                const cls = [\r\n                    'fa',\r\n                    props.results[quizItem.id] === 'success' ? 'fa-check ' + classes.success : 'fa-times ' + classes.error\r\n                ];\r\n                return (\r\n                    <li key={index}>\r\n                        <strong>{index + 1}</strong>.&nbsp;\r\n                        {quizItem.question}\r\n                        <i className={cls.join(' ')}/>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <p>Правильно: {successCounter} из {props.quiz.length}</p>\r\n        <div>\r\n            <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n            <Link to={'/'}><Button type=\"success\">Перейти в список тестов</Button></Link>\r\n\r\n        </div>\r\n    </div>)\r\n};\r\nexport default FinishedQuiz","import React, {Component} from \"react\";\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\"\r\n\r\nexport const ERROR = 'error';\r\nexport const SUCCESS = 'success';\r\n\r\nclass Quiz extends Component {\r\n    state = {\r\n        results: {},  // {[id]: 'success' || 'error'}\r\n        isFinished: false,\r\n        activeQuestion: 0,\r\n        answerState: null, // {[id]: 'success' || 'error'}\r\n        quiz: [{\r\n            id: 1,\r\n            question: 'Че каво, епт?',\r\n            rightAnswerId: 3,\r\n            answers: [\r\n                {text: 'Не, ничо', id: 1},\r\n                {text: 'Отвали', id: 2},\r\n                {text: 'Все огонь', id: 3},\r\n                {text: 'Все, пока', id: 4},\r\n            ]\r\n        }, {\r\n            id: 2,\r\n            question: 'Кто чаво, епт?',\r\n            rightAnswerId: 1,\r\n            answers: [\r\n                {text: 'Я хз', id: 1},\r\n                {text: 'Ты достал', id: 2},\r\n                {text: 'Ой все', id: 3},\r\n                {text: 'Ну ура', id: 4},\r\n            ]\r\n        }]\r\n    };\r\n\r\n\r\n    isQuizFinished() {\r\n        return !(this.state.activeQuestion + 1 < this.state.quiz.length)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Quiz ID =' + this.props.match.params.id)\r\n    }\r\n\r\n    onAnswerClickHandler = (answerId) => {\r\n        console.log(answerId);\r\n        if (this.state.answerState) {\r\n            const key = Object.keys(this.state.answerState)[0];\r\n            if (this.state.answerState[key] === SUCCESS) {\r\n                return\r\n            }\r\n        }\r\n        const question = this.state.quiz[this.state.activeQuestion];\r\n        const results = this.state.results;\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = SUCCESS\r\n            }\r\n            this.setState({\r\n                answerState: {[answerId]: SUCCESS},\r\n                results: results\r\n            });\r\n            const timeout = window.setTimeout(() => {\r\n                if (!this.isQuizFinished()) {\r\n                    this.setState({\r\n                        activeQuestion: this.state.activeQuestion + 1,\r\n                        answerState: null\r\n                    })\r\n                } else {\r\n                    this.setState({isFinished: true});\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000);\r\n\r\n        } else {\r\n            results[question.id] = ERROR;\r\n            this.setState({\r\n                answerState: {[answerId]: ERROR},\r\n                results: results\r\n            });\r\n        }\r\n    };\r\n\r\n    retryHandler = () => {\r\n        this.setState({\r\n            results: {},\r\n            isFinished: false,\r\n            activeQuestion: 0,\r\n            answerState: null,\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.state.isFinished ?\r\n                            <FinishedQuiz results={this.state.results}\r\n                                          quiz={this.state.quiz}\r\n                                          onRetry={this.retryHandler}\r\n                            />\r\n                            :\r\n                            <ActiveQuiz question={this.state.quiz[this.state.activeQuestion].question}\r\n                                        answers={this.state.quiz[this.state.activeQuestion].answers}\r\n                                        onAnswerClick={this.onAnswerClickHandler}\r\n                                        quizLength={this.state.quiz.length}\r\n                                        answerNumber={this.state.activeQuestion + 1}\r\n                                        state={this.state.answerState}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Quiz\r\n","import React, {Component} from 'react';\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nclass QuizList extends Component {\r\n    renderQuizes() {\r\n        return [1, 2, 3].map((quiz, index) => {\r\n            return (<li>\r\n                <NavLink to={'/quiz/'+ quiz}>Тест {quiz}</NavLink>\r\n            </li>)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n                    <ul>\r\n                        {this.renderQuizes()}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizList;","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || \"text\";\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input id={htmlFor} type={inputType} value={props.value} onChange={props.onChange}/>\r\n            {isInvalid(props) ? <span>{props.errorMessage || 'Значение некорректно'}</span> : null}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Input;","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\n\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    loginHandler = () => {\r\n\r\n    };\r\n\r\n    registerHandler = () => {\r\n\r\n    };\r\n\r\n    submitHandler = () => {\r\n        // eslint-disable-next-line no-restricted-globals\r\n        event.preventDefault()\r\n    };\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n        let isValid = true;\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid\r\n        }\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n        let isFormValid = true;\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = isFormValid && formControls[name].valid\r\n        });\r\n        this.setState({formControls: formControls, isFormValid: isFormValid})\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (<Input\r\n                key={controlName + index}\r\n                type={control.type}\r\n                value={control.value}\r\n                valid={control.valid}\r\n                touched={control.touched}\r\n                label={control.label}\r\n                errorMessage={control.errorMessage}\r\n                shouldValidate={!!control.validation}\r\n                onChange={event => this.onChangeHandler(event, controlName)}\r\n            />)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form className={classes.AuthForm} onSubmit={this.submitHandler}>\r\n                        {this.renderInputs()}\r\n\r\n                        <Button type=\"success\" onClick={this.loginHandler} disabled={!this.state.isFormValid}>Войти</Button>\r\n                        <Button type=\"primary\" onClick={this.registerHandler} disabled={!this.state.isFormValid}>Регистрация</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Auth;","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n    let isValid = true;\r\n    if (validation.required) {\r\n        isValid = value.trim() && isValid\r\n    }\r\n    return isValid\r\n\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = isFormValid && formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n    return isFormValid\r\n}","import React from \"react\";\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}__${Math.random()}`;\r\n    return (<div className={classes.Select}>\r\n        <label htmlFor={htmlFor}>{props.label}</label>\r\n        <select id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}>\r\n            {props.options.map((option, index) => {\r\n                return (<option value={option.value} key={`${option.value}__${index}`}>{option.text}</option>)\r\n            })}\r\n        </select>\r\n    </div>)\r\n};\r\n\r\nexport default Select","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css'\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Select from \"../../components/UI/Select/Select\";\r\n\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({label: `Вариант ${number}`, errorMessage: 'Значение не может быть пустым'}, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({label: 'Введите вопрос', errorMessage: 'Вопрос не может быть пустым'}, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        quiz: [],\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault();\r\n        const quiz = this.state.quiz.concat();\r\n        const index = quiz.length + 1;\r\n        const questionItem = {\r\n            question: this.state.formControls.question.value,\r\n            id: index,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: this.state.formControls.option1.value, id: this.state.formControls.option1.id},\r\n                {text: this.state.formControls.option2.value, id: this.state.formControls.option2.id},\r\n                {text: this.state.formControls.option3.value, id: this.state.formControls.option3.id},\r\n                {text: this.state.formControls.option4.value, id: this.state.formControls.option4.id},\r\n            ]\r\n        };\r\n        quiz.push(questionItem);\r\n        this.setState({\r\n                quiz,\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: createFormControls()\r\n            }\r\n        )\r\n    };\r\n\r\n    createQuizHandler = (event) => {\r\n        event.preventDefault()\r\n        console.log(this.state.quiz)\r\n        // TODO: link to backend :)\r\n    };\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n        control.touched = true;\r\n        control.value = value;\r\n        control.valid = validate(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n        this.setState({formControls, isFormValid: validateForm(formControls)})\r\n    };\r\n\r\n\r\n    selectChangeHandler = event => {\r\n        console.log(event.target.value);\r\n        this.setState({rightAnswerId: +event.target.value})\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <React.Fragment key={`${controlName}__${index}`}>\r\n                    <Input\r\n                        key={`${controlName}__${index}`}\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}/>\r\n                    {index === 0 ? <hr/> : null}\r\n                </React.Fragment>)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n                    <form onSubmit={this.submitHandler}>\r\n                        {this.renderInputs()}\r\n                        <Select\r\n                            label=\"Выберите правильный ответ\"\r\n                            value={this.state.rightAnswerId}\r\n                            onChange={this.selectChangeHandler}\r\n                            options={[\r\n                                {text: 1, value: 1},\r\n                                {text: 2, value: 2},\r\n                                {text: 3, value: 3},\r\n                                {text: 4, value: 4},\r\n                            ]}\r\n                        />\r\n                        <Button type='primary' onClick={this.addQuestionHandler} disabled={!this.state.isFormValid}>Добавить вопрос</Button>\r\n                        <Button type='success' onClick={this.createQuizHandler} disabled={!this.state.quiz.length === 0}>Создать тест</Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default QuizCreator;","import React from 'react';\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Quiz from './containers/Quiz/Quiz'\r\nimport QuizList from \"./containers/QuizList/QuizList\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\r\nimport {Route, Switch} from 'react-router-dom'\r\n\r\nfunction App() {\r\n    return (\r\n        <Layout>\r\n            <Switch>\r\n                <Route path='/auth' component={Auth}/>\r\n                <Route path='/quiz-creator' component={QuizCreator}/>\r\n                <Route path='/quiz/:id' component={Quiz}/>\r\n                <Route path='/' component={QuizList}/>\r\n            </Switch>\r\n\r\n        </Layout>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nconst app = (\r\n    <React.StrictMode>\r\n        <BrowserRouter><App/></BrowserRouter>\r\n    </React.StrictMode>\r\n);\r\n\r\nReactDOM.render(app,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}