{"version":3,"sources":["components/Navigation/Drawer/Drawer.module.css","components/FinishedQuiz/FinishedQuiz.module.css","components/Navigation/MenuToggle/MenuToggle.module.css","containers/Quiz/Quiz.module.css","components/ActiveQuiz/ActiveQuiz.module.css","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.module.css","components/UI/Button/Button.module.css","components/UI/Loader/Loader.module.css","containers/Auth/Auth.module.css","components/UI/Input/Input.module.css","hoc/Layout/Layout.module.css","components/UI/Backdrop/Backdrop.module.css","components/ActiveQuiz/AnswersList/AnswersList.module.css","containers/QuizList/QuizList.module.css","containers/QuizCreator/QuizCreator.module.css","components/UI/Select/Select.module.css","components/Navigation/MenuToggle/MenuToggle.js","components/UI/Backdrop/Backdrop.js","components/Navigation/Drawer/Drawer.js","hoc/Layout/Layout.js","components/ActiveQuiz/AnswersList/AnswerItem/AnswerItem.js","components/ActiveQuiz/AnswersList/AnswersList.js","components/ActiveQuiz/ActiveQuiz.js","components/UI/Button/Button.js","components/FinishedQuiz/FinishedQuiz.js","components/UI/Loader/Loader.js","axios/axios-quiz.js","store/actions/quiz.js","store/actions/actionTypes.js","containers/Quiz/Quiz.js","containers/QuizList/QuizList.js","components/UI/Input/Input.js","store/actions/auth.js","containers/Auth/Auth.js","components/Logout/Logout.js","form/formFramework.js","components/UI/Select/Select.js","containers/QuizCreator/QuizCreator.js","store/actions/create.js","App.js","serviceWorker.js","store/reducers/quiz.js","store/reducers/create.js","store/reducers/auth.js","store/reducers/RootReducer.js","index.js"],"names":["module","exports","MenuToggle","props","cls","classes","isOpen","open","onClick","onToggle","className","join","Backdrop","Drawer","clickHandler","onClose","links","map","link","index","key","to","exact","activeClassName","active","label","this","isAuthenticated","push","close","Fragment","renderLinks","Component","Layout","state","menu","toggleMenuHandler","setState","menuCloseHandler","children","connect","auth","token","AnswerItem","onAnswerClick","answer","id","text","AnswersList","console","log","answers","ActiveQuiz","Question","answerNumber","question","quizLength","Button","type","disabled","FinishedQuiz","successCounter","Object","keys","results","reduce","total","quiz","quizItem","success","error","length","onRetry","Loader","center","axios","create","fetchQuizesSuccess","quizes","payload","fetchQuizesError","e","fetchQuizSuccess","quizSetState","answerState","ERROR","SUCCESS","Quiz","fetchQuizById","match","params","retryQuiz","QuizWrapper","loading","isFinished","activeQuestion","quizAnswerClick","dispatch","quizId","a","get","response","data","answerId","getState","rightAnswerId","timeout","window","setTimeout","quizNextQuestion","clearTimeout","QuizList","name","fetchQuizes","renderQuizes","forEach","isInvalid","valid","touched","shouldValidate","Input","inputType","htmlFor","Math","random","invalid","value","onChange","errorMessage","authSuccess","autoLogout","time","logout","localStorage","removeItem","Auth","isFormValid","formControls","email","validation","required","password","minLength","loginHandler","registerHandler","submitHandler","event","preventDefault","onChangeHandler","controlName","control","target","validateControl","isValid","trim","is","AuthForm","onSubmit","renderInputs","isLogin","authData","returnSecureToken","post","expirationDate","Date","getTime","expiresIn","setItem","idToken","localId","Logout","createControl","config","validate","validateForm","hasOwnProperty","Select","options","option","createOptionControl","number","createFormControls","option1","option2","option3","option4","QuizCreator","addQuestionHandler","questionItem","createQuizQuestion","createQuizHandler","finishCreateQuiz","changeHandler","selectChangeHandler","item","App","authLogin","routes","path","component","getItem","Boolean","location","hostname","initialState","combineReducers","action","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","store","createStore","RootReducer","app","StrictMode","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.384ae003.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Drawer\":\"Drawer_Drawer__3i-XY\",\"close\":\"Drawer_close__s4EKF\",\"active\":\"Drawer_active__2KEkH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FinishedQuiz\":\"FinishedQuiz_FinishedQuiz__27Mo1\",\"success\":\"FinishedQuiz_success__1JIed\",\"error\":\"FinishedQuiz_error__1NK2Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MenuToggle\":\"MenuToggle_MenuToggle__1L-Zp\",\"open\":\"MenuToggle_open__2OCEZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Quiz\":\"Quiz_Quiz__2wya1\",\"QuizWrapper\":\"Quiz_QuizWrapper__191J4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActiveQuiz\":\"ActiveQuiz_ActiveQuiz__3VjB-\",\"Question\":\"ActiveQuiz_Question__pSzK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswerItem\":\"AnswerItem_AnswerItem__BfScg\",\"success\":\"AnswerItem_success__33WEN\",\"error\":\"AnswerItem_error__wq5cF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1hbkP\",\"success\":\"Button_success__vUGQE\",\"error\":\"Button_error__15lok\",\"primary\":\"Button_primary__31y4A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"Loader_Loader__2WvOG\",\"center\":\"Loader_center__3TI5z\",\"Loader1\":\"Loader_Loader1__2Z4oY\",\"Loader2\":\"Loader_Loader2__2UCHy\",\"Loader3\":\"Loader_Loader3__1AVMp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__38lIP\",\"AuthForm\":\"Auth_AuthForm__2w9p_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__2GEbV\",\"invalid\":\"Input_invalid__1tSLi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__38ghg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop_Backdrop__3wxm3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AnswersList\":\"AnswersList_AnswersList__2CRBX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizList\":\"QuizList_QuizList__1ru--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"QuizCreator\":\"QuizCreator_QuizCreator__24ZAX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Select\":\"Select_Select__11aP5\"};","import React from \"react\";\r\nimport classes from './MenuToggle.module.css'\r\n\r\n\r\nconst MenuToggle = props => {\r\n    const cls = [\r\n        classes.MenuToggle,\r\n        'fa',\r\n        props.isOpen ? 'fa-times ' + classes.open : 'fa-bars'\r\n    ];\r\n\r\n    return (<i onClick={props.onToggle} className={cls.join(' ')}/>)\r\n};\r\n\r\nexport default MenuToggle","import React from \"react\";\r\nimport classes from './Backdrop.module.css'\r\n\r\nconst Backdrop = props => <div className={classes.Backdrop} onClick={props.onClick}/>;\r\n\r\nexport default Backdrop","import React, {Component} from \"react\";\r\nimport classes from './Drawer.module.css'\r\nimport Backdrop from \"../../UI/Backdrop/Backdrop\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nclass Drawer extends Component {\r\n    clickHandler = () => {\r\n        this.props.onClose()\r\n    };\r\n\r\n    renderLinks(links) {\r\n        return links.map((link, index) => {\r\n            return (\r\n                <li key={index}>\r\n                    <NavLink to={link.to} exact={link.exact} activeClassName={classes.active} onClick={this.clickHandler}>{link.label}</NavLink>\r\n                </li>\r\n            )\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const links = [\r\n            {to: '/', label: 'Список', exact: true},\r\n\r\n        ];\r\n\r\n        if (this.props.isAuthenticated) {\r\n            links.push({to: '/quiz-creator', label: 'Создать тест', exact: false});\r\n            links.push({to: '/logout', label: 'Выйти', exact: false})\r\n        } else {\r\n            links.push({to: '/auth', label: 'Авторизация', exact: false})\r\n        }\r\n\r\n        const cls = [classes.Drawer,\r\n            !this.props.isOpen ? classes.close : null];\r\n        return (\r\n            <React.Fragment>\r\n                <nav className={cls.join(' ')}>\r\n                    <ul>\r\n                        {this.renderLinks(links)}\r\n                    </ul>\r\n                </nav>\r\n                {this.props.isOpen ? <Backdrop onClick={this.props.onClose}/> : null}\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Drawer","import React, {Component} from \"react\";\r\nimport classes from './Layout.module.css'\r\nimport MenuToggle from '../../components/Navigation/MenuToggle/MenuToggle'\r\nimport Drawer from \"../../components/Navigation/Drawer/Drawer\";\r\nimport {connect} from 'react-redux'\r\n\r\nclass Layout extends Component {\r\n\r\n    state = {\r\n        menu: false\r\n    };\r\n\r\n    toggleMenuHandler = () => {\r\n        this.setState({menu: !this.state.menu})\r\n    };\r\n\r\n    menuCloseHandler = () => {\r\n        this.setState({menu: false})\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Layout}>\r\n                <Drawer\r\n                    isOpen={this.state.menu}\r\n                    onClose={this.menuCloseHandler}\r\n                    isAuthenticated={this.props.isAuthenticated}\r\n                />\r\n                <MenuToggle\r\n                    isOpen={this.state.menu}\r\n                    onToggle={this.toggleMenuHandler}\r\n                />\r\n                <main>\r\n                    {this.props.children}\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps)(Layout)","import React from \"react\";\r\nimport classes from './AnswerItem.module.css'\r\n\r\nconst AnswerItem = props => {\r\n    const cls = [classes.AnswerItem];\r\n    if (props.state) {\r\n        cls.push(classes[props.state])\r\n    }\r\n\r\n    return (<li className={cls.join(' ')}\r\n                onClick={() => props.onAnswerClick(props.answer.id)}>\r\n        {props.answer.text}\r\n    </li>)\r\n};\r\n\r\n\r\nexport default AnswerItem","import React from \"react\";\r\nimport classes from './AnswersList.module.css'\r\nimport AnswerItem from \"./AnswerItem/AnswerItem\";\r\n\r\nconst AnswersList = props => {\r\n    console.log(props);\r\n    return (\r\n        <ul className={classes.AnswersList}>\r\n            {props.answers.map((answer, index) => {\r\n                return (<AnswerItem\r\n                    onAnswerClick={props.onAnswerClick}\r\n                    key={index}\r\n                    answer={answer}\r\n                    state={props.state ? props.state[answer.id] : null}\r\n                />)\r\n            })}\r\n        </ul>\r\n    )\r\n};\r\n\r\n\r\nexport default AnswersList","import React from \"react\";\r\nimport classes from './ActiveQuiz.module.css'\r\nimport AnswersList from \"./AnswersList/AnswersList\";\r\n\r\nconst ActiveQuiz = props => {\r\n\r\n    return (\r\n        <div className={classes.ActiveQuiz}>\r\n            <p className={classes.Question}>\r\n            <span>\r\n                <strong>{props.answerNumber}.</strong>&nbsp;\r\n                {props.question}\r\n            </span>\r\n                <small>{props.answerNumber} из {props.quizLength}</small>\r\n            </p>\r\n            <AnswersList\r\n                answers={props.answers}\r\n                onAnswerClick={props.onAnswerClick}\r\n                state={props.state}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActiveQuiz","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ];\r\n\r\n    return (\r\n        <button onClick={props.onClick}\r\n                className={cls.join(' ')}\r\n                disabled={props.disabled}>\r\n            {props.children}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default Button","import React from \"react\";\r\nimport classes from './FinishedQuiz.module.css'\r\nimport Button from \"../UI/Button/Button\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst FinishedQuiz = props => {\r\n    const successCounter = Object.keys(props.results).reduce((total, key) => {\r\n        if (props.results[key] === 'success') {\r\n            total++\r\n        }\r\n        return total\r\n    }, 0);\r\n\r\n    return (<div className={classes.FinishedQuiz}>\r\n        <ul>\r\n            {props.quiz.map((quizItem, index) => {\r\n                const cls = [\r\n                    'fa',\r\n                    props.results[quizItem.id] === 'success' ? 'fa-check ' + classes.success : 'fa-times ' + classes.error\r\n                ];\r\n                return (\r\n                    <li key={index}>\r\n                        <strong>{index + 1}</strong>.&nbsp;\r\n                        {quizItem.question}\r\n                        <i className={cls.join(' ')}/>\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n        <p>Правильно: {successCounter} из {props.quiz.length}</p>\r\n        <div>\r\n            <Button onClick={props.onRetry} type=\"primary\">Повторить</Button>\r\n            <Link to={'/'}><Button type=\"success\">Перейти в список тестов</Button></Link>\r\n\r\n        </div>\r\n    </div>)\r\n};\r\nexport default FinishedQuiz","import React from \"react\";\r\nimport classes from './Loader.module.css'\r\n\r\nconst Loader = props => (\r\n    <div className={classes.center}>\r\n        <div className={classes.Loader}>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Loader","import axios from 'axios'\r\n\r\nexport default axios.create({'baseURL': 'https://react-quiz-73806.firebaseio.com'})","import axios from '../../axios/axios-quiz'\r\nimport {\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    FETCH_QUIZ_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION,\r\n    RETRY_QUIZ\r\n} from \"./actionTypes\";\r\nimport {ERROR, SUCCESS} from \"../../containers/Quiz/Quiz\";\r\n\r\nexport function fetchQuizes() {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart());\r\n        try {\r\n            const response = await axios.get('/quizes.json');\r\n            const quizes = [];\r\n            Object.keys(response.data).forEach((key, index) => {\r\n                quizes.push({\r\n                    id: key,\r\n                    name: `Тест #${index + 1}`\r\n                })\r\n            });\r\n            dispatch(fetchQuizesSuccess(quizes))\r\n        } catch (e) {\r\n            console.log(e);\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizesStart() {\r\n    return {\r\n        type: FETCH_QUIZES_START\r\n    }\r\n}\r\n\r\nexport function fetchQuizesSuccess(quizes) {\r\n    return {\r\n        type: FETCH_QUIZES_SUCCESS,\r\n        payload: quizes\r\n    }\r\n}\r\n\r\nexport function fetchQuizesError(e) {\r\n    return {\r\n        type: FETCH_QUIZES_ERROR,\r\n        error: e\r\n    }\r\n}\r\n\r\nexport function fetchQuizById(quizId) {\r\n    return async dispatch => {\r\n        dispatch(fetchQuizesStart());\r\n        try {\r\n            const response = await axios.get(`/quizes/${quizId}.json`);\r\n            console.log(response);\r\n            const quiz = response.data;\r\n            dispatch(fetchQuizSuccess(quiz))\r\n        } catch (e) {\r\n            dispatch(fetchQuizesError(e))\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchQuizSuccess(quiz) {\r\n    return {\r\n        type: FETCH_QUIZ_SUCCESS,\r\n        payload: quiz\r\n    }\r\n}\r\n\r\nexport function quizSetState(answerState, results) {\r\n    return {\r\n        type: QUIZ_SET_STATE,\r\n        answerState,\r\n        results\r\n    }\r\n}\r\n\r\nexport function finishQuiz() {\r\n    return {\r\n        type: FINISH_QUIZ\r\n    }\r\n}\r\n\r\nexport function quizNextQuestion(question) {\r\n    return {\r\n        type: QUIZ_NEXT_QUESTION,\r\n        payload: question\r\n    }\r\n}\r\n\r\nexport function retryQuiz() {\r\n    return {\r\n        type: RETRY_QUIZ\r\n    }\r\n}\r\n\r\n\r\nexport function quizAnswerClick(answerId) {\r\n    return (dispatch, getState) => {\r\n        const state = getState().quiz;\r\n        console.log(answerId);\r\n        if (state.answerState) {\r\n            const key = Object.keys(state.answerState)[0];\r\n            if (state.answerState[key] === SUCCESS) {\r\n                return\r\n            }\r\n        }\r\n        const question = state.quiz[state.activeQuestion];\r\n        const results = state.results;\r\n        if (question.rightAnswerId === answerId) {\r\n            if (!results[question.id]) {\r\n                results[question.id] = SUCCESS\r\n            }\r\n            dispatch(quizSetState({[answerId]: SUCCESS}, results));\r\n            const timeout = window.setTimeout(() => {\r\n                if (!(state.activeQuestion + 1 < state.quiz.length)) {\r\n                    dispatch(finishQuiz())\r\n                } else {\r\n                    dispatch((quizNextQuestion(state.activeQuestion + 1)))\r\n                }\r\n                window.clearTimeout(timeout)\r\n            }, 1000);\r\n\r\n        } else {\r\n            results[question.id] = ERROR;\r\n            dispatch(quizSetState({[answerId]: ERROR}, results));\r\n\r\n        }\r\n    }\r\n}","export const FETCH_QUIZES_START = 'FETCH_QUIZES_START';\r\nexport const FETCH_QUIZES_SUCCESS = 'FETCH_QUIZES_SUCCESS';\r\nexport const FETCH_QUIZES_ERROR = 'FETCH_QUIZES_ERROR';\r\nexport const FETCH_QUIZ_SUCCESS = 'FETCH_QUIZ_SUCCESS';\r\nexport const QUIZ_SET_STATE = 'QUIZ_SET_STATE';\r\nexport const FINISH_QUIZ = 'FINISH_QUIZ';\r\nexport const QUIZ_NEXT_QUESTION = 'QUIZ_NEXT_QUESTION';\r\nexport const RETRY_QUIZ = 'RETRY_QUIZ';\r\nexport const CREATE_QUIZ_QUESTION = 'CREATE_QUIZ_QUESTION';\r\nexport const RESET_QUIZ_CREATION = 'RESET_QUIZ_CREATION';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\n","import React, {Component} from \"react\";\r\nimport classes from './Quiz.module.css'\r\nimport ActiveQuiz from \"../../components/ActiveQuiz/ActiveQuiz\";\r\nimport FinishedQuiz from \"../../components/FinishedQuiz/FinishedQuiz\"\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizById, quizAnswerClick, retryQuiz} from '../../store/actions/quiz'\r\n\r\nexport const ERROR = 'error';\r\nexport const SUCCESS = 'success';\r\n\r\nclass Quiz extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizById(this.props.match.params.id)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.retryQuiz()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Quiz}>\r\n                <div className={classes.QuizWrapper}>\r\n                    <h1>Ответьте на все вопросы</h1>\r\n                    {\r\n                        this.props.loading || !this.props.quiz ?\r\n                            <Loader/>\r\n                            :\r\n                            this.props.isFinished ?\r\n                                <FinishedQuiz results={this.props.results}\r\n                                              quiz={this.props.quiz}\r\n                                              onRetry={this.props.retryQuiz}\r\n                                />\r\n                                :\r\n                                <ActiveQuiz question={this.props.quiz[this.props.activeQuestion].question}\r\n                                            answers={this.props.quiz[this.props.activeQuestion].answers}\r\n                                            onAnswerClick={this.props.quizAnswerClick}\r\n                                            quizLength={this.props.quiz.length}\r\n                                            answerNumber={this.props.activeQuestion + 1}\r\n                                            state={this.props.answerState}/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        loading: state.quiz.loading,\r\n        error: state.quiz.error,\r\n        results: state.quiz.results,\r\n        isFinished: state.quiz.isFinished,\r\n        activeQuestion: state.quiz.activeQuestion,\r\n        answerState: state.quiz.answerState,\r\n        quiz: state.quiz.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizById: id => dispatch(fetchQuizById(id)),\r\n        quizAnswerClick: answerId => dispatch(quizAnswerClick(answerId)),\r\n        retryQuiz: () => dispatch(retryQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Quiz)","import React, {Component} from 'react';\r\nimport classes from './QuizList.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport Loader from \"../../components/UI/Loader/Loader\";\r\nimport {connect} from \"react-redux\";\r\nimport {fetchQuizes} from '../../store/actions/quiz'\r\n\r\nclass QuizList extends Component {\r\n\r\n\r\n    renderQuizes() {\r\n        return this.props.quizes.map((quiz) => {\r\n            return (<li key={quiz.id}>\r\n                <NavLink to={'/quiz/' + quiz.id}>{quiz.name}</NavLink>\r\n            </li>)\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.fetchQuizes()\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizList}>\r\n                <div>\r\n                    <h1>Список тестов</h1>\r\n                    {this.props.loading ? <Loader/> : <ul>{this.renderQuizes()}</ul>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quizes: state.quiz.quizes,\r\n        loading: state.quiz.loading\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        fetchQuizes: () => dispatch(fetchQuizes())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizList);","import React from 'react';\r\nimport classes from './Input.module.css'\r\n\r\nfunction isInvalid({valid, touched, shouldValidate}) {\r\n    return !valid && shouldValidate && touched\r\n}\r\n\r\nconst Input = props => {\r\n    const inputType = props.type || \"text\";\r\n    const cls = [classes.Input];\r\n    const htmlFor = `${inputType}-${Math.random()}`;\r\n\r\n    if (isInvalid(props)) {\r\n        cls.push(classes.invalid)\r\n    }\r\n\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n            <label htmlFor={htmlFor}>{props.label}</label>\r\n            <input id={htmlFor} type={inputType} value={props.value} onChange={props.onChange}/>\r\n            {isInvalid(props) ? <span>{props.errorMessage || 'Значение некорректно'}</span> : null}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Input;","import axios from 'axios'\r\nimport {AUTH_SUCCESS, AUTH_LOGOUT} from \"./actionTypes\";\r\n\r\nexport function authSuccess(token) {\r\n    return {\r\n        type: AUTH_SUCCESS,\r\n        token\r\n    }\r\n}\r\n\r\nexport function autoLogin() {\r\n  return dispatch => {\r\n    const token = localStorage.getItem('token')\r\n    if (!token) {\r\n      dispatch(logout())\r\n    } else {\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'))\r\n      if (expirationDate <= new Date()) {\r\n        dispatch(logout())\r\n      } else {\r\n        dispatch(authSuccess(token))\r\n        dispatch(autoLogout((expirationDate.getTime() - new Date().getTime()) / 1000))\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function autoLogout(time) {\r\n    return dispatch => {\r\n        setTimeout(() => {\r\n            dispatch(logout())\r\n        }, time * 1000)\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('userId');\r\n    localStorage.removeItem('expirationDate');\r\n    return {\r\n        type: AUTH_LOGOUT\r\n    }\r\n}\r\n\r\n\r\nexport function auth(email, password, isLogin) {\r\n    return async dispatch => {\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        };\r\n        try {\r\n\r\n            const response = isLogin\r\n                ?\r\n                await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyAeUXMWnlteKc0ssqi69A0bzd_8z9Al5gs', authData)\r\n                :\r\n                await axios.post('https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=AIzaSyAeUXMWnlteKc0ssqi69A0bzd_8z9Al5gs', authData);\r\n\r\n            console.log(response.data);\r\n            const data = response.data;\r\n\r\n            const expirationDate = new Date(new Date().getTime() + data.expiresIn * 1000);\r\n\r\n\r\n            localStorage.setItem('token', data.idToken);\r\n            localStorage.setItem('userId', data.localId);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            dispatch(authSuccess(data.idToken));\r\n            dispatch(autoLogout(data.expiresIn))\r\n\r\n        } catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport classes from './Auth.module.css'\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport is from 'is_js'\r\nimport {connect} from \"react-redux\";\r\nimport {auth} from \"../../store/actions/auth\"\r\n\r\nclass Auth extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        formControls: {\r\n            email: {\r\n                value: '',\r\n                type: 'email',\r\n                label: 'Email',\r\n                errorMessage: 'Введите корректный Email',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    email: true\r\n                }\r\n            },\r\n            password: {\r\n                value: '',\r\n                type: 'password',\r\n                label: 'Пароль',\r\n                errorMessage: 'Введите корректный пароль',\r\n                valid: false,\r\n                touched: false,\r\n                validation: {\r\n                    required: true,\r\n                    minLength: 6\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    loginHandler = () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, true);\r\n    };\r\n\r\n    registerHandler =  () => {\r\n        this.props.auth(this.state.formControls.email.value, this.state.formControls.password.value, false);\r\n    };\r\n\r\n    submitHandler = (event) => {\r\n        event.preventDefault()\r\n    };\r\n\r\n    validateControl(value, validation) {\r\n        if (!validation) {\r\n            return true\r\n        }\r\n        let isValid = true;\r\n        if (validation.required) {\r\n            isValid = value.trim() !== '' && isValid\r\n        }\r\n        if (validation.email) {\r\n            isValid = is.email(value) && isValid\r\n        }\r\n        if (validation.minLength) {\r\n            isValid = value.length >= validation.minLength && isValid\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    onChangeHandler = (event, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n        control.value = event.target.value;\r\n        control.touched = true;\r\n        control.valid = this.validateControl(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n        let isFormValid = true;\r\n        Object.keys(formControls).forEach(name => {\r\n            isFormValid = isFormValid && formControls[name].valid\r\n        });\r\n        this.setState({formControls: formControls, isFormValid: isFormValid})\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (<Input\r\n                key={controlName + index}\r\n                type={control.type}\r\n                value={control.value}\r\n                valid={control.valid}\r\n                touched={control.touched}\r\n                label={control.label}\r\n                errorMessage={control.errorMessage}\r\n                shouldValidate={!!control.validation}\r\n                onChange={event => this.onChangeHandler(event, controlName)}\r\n            />)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Auth}>\r\n                <div>\r\n                    <h1>Авторизация</h1>\r\n                    <form className={classes.AuthForm} onSubmit={this.submitHandler}>\r\n                        {this.renderInputs()}\r\n\r\n                        <Button type=\"success\" onClick={this.loginHandler} disabled={!this.state.isFormValid}>Войти</Button>\r\n                        <Button type=\"primary\" onClick={this.registerHandler} disabled={!this.state.isFormValid}>Регистрация</Button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        auth: (email, password, isLogin) => dispatch(auth(email, password, isLogin))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Auth);","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {logout} from \"../../store/actions/auth\";\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nclass Logout extends Component {\r\n   componentDidMount() {\r\n       this.props.logout()\r\n   }\r\n   render() {\r\n       return <Redirect to={'/'}/>\r\n   }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return{\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","export function createControl(config, validation) {\r\n    return {\r\n        ...config,\r\n        validation,\r\n        valid: !validation,\r\n        touched: false,\r\n        value: ''\r\n    }\r\n\r\n}\r\n\r\nexport function validate(value, validation = null) {\r\n    if (!validation) {\r\n        return true\r\n    }\r\n    let isValid = true;\r\n    if (validation.required) {\r\n        isValid = value.trim() && isValid\r\n    }\r\n    return isValid\r\n\r\n}\r\n\r\nexport function validateForm(formControls) {\r\n    let isFormValid = true;\r\n    for (let control in formControls) {\r\n        if (formControls.hasOwnProperty(control)) {\r\n            isFormValid = isFormValid && formControls[control].valid && isFormValid\r\n        }\r\n    }\r\n    return isFormValid\r\n}","import React from \"react\";\r\nimport classes from './Select.module.css'\r\n\r\nconst Select = props => {\r\n    const htmlFor = `${props.label}__${Math.random()}`;\r\n    return (<div className={classes.Select}>\r\n        <label htmlFor={htmlFor}>{props.label}</label>\r\n        <select id={htmlFor}\r\n                value={props.value}\r\n                onChange={props.onChange}>\r\n            {props.options.map((option, index) => {\r\n                return (<option value={option.value} key={`${option.value}__${index}`}>{option.text}</option>)\r\n            })}\r\n        </select>\r\n    </div>)\r\n};\r\n\r\nexport default Select","import React, {Component} from 'react';\r\nimport classes from './QuizCreator.module.css'\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport {createControl, validate, validateForm} from '../../form/formFramework'\r\nimport Select from \"../../components/UI/Select/Select\";\r\nimport {connect} from \"react-redux\";\r\nimport {createQuizQuestion, finishCreateQuiz} from '../../store/actions/create';\r\n\r\nfunction createOptionControl(number) {\r\n    return createControl({label: `Вариант ${number}`, errorMessage: 'Значение не может быть пустым'}, {required: true})\r\n}\r\n\r\nfunction createFormControls() {\r\n    return {\r\n        question: createControl({label: 'Введите вопрос', errorMessage: 'Вопрос не может быть пустым'}, {required: true}),\r\n        option1: createOptionControl(1),\r\n        option2: createOptionControl(2),\r\n        option3: createOptionControl(3),\r\n        option4: createOptionControl(4),\r\n    }\r\n}\r\n\r\nclass QuizCreator extends Component {\r\n\r\n    state = {\r\n        isFormValid: false,\r\n        rightAnswerId: 1,\r\n        formControls: createFormControls()\r\n    };\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    addQuestionHandler = (event) => {\r\n        event.preventDefault();\r\n        const questionItem = {\r\n            question: this.state.formControls.question.value,\r\n            id: this.props.quiz.length + 1,\r\n            rightAnswerId: this.state.rightAnswerId,\r\n            answers: [\r\n                {text: this.state.formControls.option1.value, id: 1},\r\n                {text: this.state.formControls.option2.value, id: 2},\r\n                {text: this.state.formControls.option3.value, id: 3},\r\n                {text: this.state.formControls.option4.value, id: 4},\r\n            ]\r\n        };\r\n        this.props.createQuizQuestion(questionItem);\r\n        this.setState({\r\n                isFormValid: false,\r\n                rightAnswerId: 1,\r\n                formControls: createFormControls()\r\n            }\r\n        )\r\n    };\r\n\r\n    createQuizHandler = event => {\r\n        event.preventDefault();\r\n\r\n        this.setState({\r\n            quiz: [],\r\n            isFormValid: false,\r\n            rightAnswerId: 1,\r\n            formControls: createFormControls()\r\n        });\r\n        this.props.finishCreateQuiz()\r\n\r\n    };\r\n\r\n    changeHandler = (value, controlName) => {\r\n        const formControls = {...this.state.formControls};\r\n        const control = {...formControls[controlName]};\r\n        control.touched = true;\r\n        control.value = value;\r\n        control.valid = validate(control.value, control.validation);\r\n        formControls[controlName] = control;\r\n        this.setState({formControls, isFormValid: validateForm(formControls)})\r\n    };\r\n\r\n    selectChangeHandler = event => {\r\n        console.log(event.target.value);\r\n        this.setState({rightAnswerId: +event.target.value})\r\n    };\r\n\r\n    renderInputs() {\r\n        return Object.keys(this.state.formControls).map((controlName, index) => {\r\n            const control = this.state.formControls[controlName];\r\n            return (\r\n                <React.Fragment key={`${controlName}__${index}`}>\r\n                    <Input\r\n                        key={`${controlName}__${index}`}\r\n                        label={control.label}\r\n                        value={control.value}\r\n                        valid={control.valid}\r\n                        shouldValidate={!!control.validation}\r\n                        touched={control.touched}\r\n                        errorMessage={control.errorMessage}\r\n                        onChange={event => this.changeHandler(event.target.value, controlName)}/>\r\n                    {index === 0 ? <hr/> : null}\r\n                </React.Fragment>)\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.QuizCreator}>\r\n                <div>\r\n                    <h1>Создание теста</h1>\r\n                    <form onSubmit={this.submitHandler}>\r\n                        {this.renderInputs()}\r\n                        <Select\r\n                            label=\"Выберите правильный ответ\"\r\n                            value={this.state.rightAnswerId}\r\n                            onChange={this.selectChangeHandler}\r\n                            options={[\r\n                                {text: 1, value: 1},\r\n                                {text: 2, value: 2},\r\n                                {text: 3, value: 3},\r\n                                {text: 4, value: 4},\r\n                            ]}\r\n                        />\r\n                        <Button type='primary' onClick={this.addQuestionHandler} disabled={!this.state.isFormValid}>Добавить вопрос</Button>\r\n                        <Button type='success' onClick={this.createQuizHandler} disabled={!this.props.quiz.length === 0}>Создать тест</Button>\r\n\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        quiz: state.create.quiz\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        createQuizQuestion: item => dispatch(createQuizQuestion(item)),\r\n        finishCreateQuiz: () => dispatch(finishCreateQuiz())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(QuizCreator);\r\n","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"./actionTypes\";\r\nimport axios from \"../../axios/axios-quiz\";\r\n\r\n\r\nexport function createQuizQuestion(item) {\r\n    return {\r\n        type: CREATE_QUIZ_QUESTION,\r\n        question: item\r\n    }\r\n}\r\n\r\nexport function resetQuizCreation() {\r\n    return {\r\n        type: RESET_QUIZ_CREATION\r\n    }\r\n\r\n}\r\n\r\nexport function finishCreateQuiz() {\r\n    return async (dispatch, getState) => {\r\n        await axios.post('/quizes.json', getState().create.quiz);\r\n        dispatch(resetQuizCreation())\r\n    }\r\n\r\n\r\n}","import React, {Component} from 'react';\r\nimport Layout from \"./hoc/Layout/Layout\";\r\nimport Quiz from './containers/Quiz/Quiz'\r\nimport QuizList from \"./containers/QuizList/QuizList\";\r\nimport Auth from \"./containers/Auth/Auth\";\r\nimport Logout from \"./components/Logout/Logout\";\r\nimport QuizCreator from \"./containers/QuizCreator/QuizCreator\";\r\nimport {Route, Switch, Redirect} from 'react-router-dom';\r\nimport {connect} from 'react-redux'\r\nimport {autoLogin} from '../src/store/actions/auth'\r\n\r\nclass App extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.authLogin()\r\n    }\r\n\r\n    render() {\r\n        let routes = (\r\n            <Switch>\r\n\r\n                <Route path='/auth' component={Auth}/>\r\n                <Route path='/quiz/:id' component={Quiz}/>\r\n                <Route path='/logout' component={Logout}/>\r\n                <Route path='/' exact component={QuizList}/>\r\n                <Redirect to=\"/\"/>\r\n            </Switch>\r\n        );\r\n\r\n        if (this.props.isAuthenticated) {\r\n            routes = (\r\n                <Switch>\r\n\r\n                    <Route path='/quiz-creator' component={QuizCreator}/>\r\n                    <Route path='/quiz/:id' component={Quiz}/>\r\n                    <Route path='/logout' component={Logout}/>\r\n                    <Route path='/' exact component={QuizList}/>\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>);\r\n        }\r\n        return (\r\n            <Layout>{routes}</Layout>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        isAuthenticated: !!state.auth.token\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        authLogin: () => dispatch(autoLogin())\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    FETCH_QUIZ_SUCCESS,\r\n    FETCH_QUIZES_ERROR,\r\n    FETCH_QUIZES_START,\r\n    FETCH_QUIZES_SUCCESS,\r\n    QUIZ_SET_STATE,\r\n    FINISH_QUIZ,\r\n    QUIZ_NEXT_QUESTION, RETRY_QUIZ\r\n} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quizes: [],\r\n    loading: false,\r\n    error: null,\r\n    results: {},\r\n    isFinished: false,\r\n    activeQuestion: 0,\r\n    answerState: null,\r\n    quiz: null\r\n};\r\n\r\nexport default function quizReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case FETCH_QUIZES_START:\r\n            return {\r\n                ...state, loading: true\r\n            };\r\n        case FETCH_QUIZES_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quizes: action.payload\r\n            };\r\n        case FETCH_QUIZES_ERROR:\r\n            return {\r\n                ...state, loading: false, error: action.error\r\n            };\r\n        case FETCH_QUIZ_SUCCESS:\r\n            return {\r\n                ...state, loading: false, quiz: action.payload\r\n            };\r\n        case QUIZ_SET_STATE:\r\n            return {\r\n                ...state, results: action.results, answerState: action.answerState\r\n            };\r\n        case FINISH_QUIZ:\r\n            return {\r\n                ...state, isFinished: true, activeQuestion: 0, answerState: null\r\n            };\r\n        case QUIZ_NEXT_QUESTION:\r\n            return {\r\n                ...state, activeQuestion: action.payload, answerState: null\r\n            };\r\n        case RETRY_QUIZ:\r\n            return {\r\n                ...state, results: {}, isFinished: false, activeQuestion: 0, answerState: null\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}","import {CREATE_QUIZ_QUESTION, RESET_QUIZ_CREATION} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    quiz: []\r\n};\r\n\r\nexport default function createReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case CREATE_QUIZ_QUESTION:\r\n            return {\r\n                ...state,\r\n                quiz: [...state.quiz, action.question]\r\n            };\r\n        case RESET_QUIZ_CREATION:\r\n            return {\r\n                ...state,\r\n                quiz: []\r\n            };\r\n        default:\r\n            return state\r\n\r\n    }\r\n\r\n}","import {AUTH_LOGOUT, AUTH_SUCCESS} from \"../actions/actionTypes\";\r\n\r\nconst initialState = {\r\n    token: null\r\n};\r\n\r\nexport default function authReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case AUTH_SUCCESS:\r\n            return {\r\n                ...state, token: action.token\r\n            };\r\n        case AUTH_LOGOUT:\r\n            return {\r\n                ...state, token: null\r\n            };\r\n        default:\r\n            return state\r\n\r\n    }\r\n}","import {combineReducers} from \"redux\";\r\nimport quizReducer from \"./quiz\";\r\nimport createReducer from \"./create\"\r\nimport authReducer from \"./auth\"\r\n\r\n\r\nexport default combineReducers({\r\n    quiz: quizReducer,\r\n    create: createReducer,\r\n    auth: authReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport {Provider} from 'react-redux';\r\nimport RootReducer from \"./store/reducers/RootReducer\";\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        }) : compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n    applyMiddleware(thunk),\r\n);\r\nconst store = createStore(RootReducer, enhancer);\r\n\r\n\r\nconst app = (\r\n    <Provider store={store\r\n    }>\r\n        <React.StrictMode>\r\n            <BrowserRouter><App/></BrowserRouter>\r\n        </React.StrictMode>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}